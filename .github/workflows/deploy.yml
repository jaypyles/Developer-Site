name: Deploy

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Run Tests"]
    types:
      - completed

jobs:
  build:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GPAT_TOKEN }}

      - name: Set up Node.js 21
        uses: actions/setup-node@v3
        with:
          node-version: "21"

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies for semantic-release
        run: npm install semantic-release @semantic-release/git @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/changelog

      - name: Cache semantic-release dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules/semantic-release
            node_modules/@semantic-release/*
          key: ${{ runner.os }}-semantic-release-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-semantic-release-

      - name: Get semantic version
        id: semantic_version
        run: |
          VERSION=$(npx semantic-release | grep 'The next release version is' | sed 's/^.*is //')
          echo "VERSION=$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GPAT_TOKEN }}

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            docker:
              - 'Dockerfile'
              - 'src/**' 
              - 'tests/**'
              - 'public/**'
              - 'tsconfig.json'
              - 'tailwind.config.js'
              - 'babel.config.js'
              - 'next.config.mjs'
              - 'postcss.config.js'
              - 'package.json'
              - 'package-lock.json'
              - 'yarn.lock'
            helm:
              - 'charts/**'

      - name: Check for changes
        run: |
          echo "Docker Changes: ${{ steps.changes.outputs.docker }}"
          echo "Helm Changes: ${{ steps.changes.outputs.helm }}"

      - name: Setup helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Cache Helm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/helm
          key: ${{ runner.os }}-helm-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-helm-

      - name: Get short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Update version in Chart.yaml and values.yaml
        run: |
          sed -i "s/^version:.*/version: ${{ env.VERSION }}/" charts/dev-site/Chart.yaml

          if [[ "${{ steps.changes.outputs.docker }}" == "false" ]]; then
            sed -i "s/APP_VERSION:.*/APP_VERSION: latest/" charts/dev-site/values.yaml
          else
            sed -i "s/APP_VERSION:.*/APP_VERSION: ${{ env.VERSION }}/" charts/dev-site/values.yaml
          fi

      - if: steps.changes.outputs.docker == true
        name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dev_site:${{ env.VERSION }}

      - if: steps.changes.outputs.helm == true || steps.changes.outputs.docker == true
        name: Package Helm Chart
        run: |
          helm package ./charts/dev-site
          mkdir -p artifacts
          mv *.tgz artifacts/

      - if: steps.changes.outputs.helm == true || steps.changes.outputs.docker == true
        name: Update Helm repo index
        run: |
          helm repo index artifacts/ --url ${{ secrets.HELM_URL}}/main/charts/dev-site

      - if: steps.changes.outputs.helm == true || steps.changes.outputs.docker == true
        name: Commit and push changes to GitHub Helm repo
        run: |
          git clone https://${{ secrets.GPAT_TOKEN }}@github.com/jaypyles/helm-charts.git
          cd helm-charts
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          mkdir -p charts/dev-site
          cp ../artifacts/*.tgz charts/dev-site/
          cp ../artifacts/index.yaml charts/dev-site/
          git add charts/
          git commit -m "Add new dev-site chart version and update index.yaml"
          git push origin main

      - if: steps.changes.outputs.helm == true || steps.changes.outputs.docker == true
        name: Commit version changes to repo
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"
          git add charts/dev-site/Chart.yaml charts/dev-site/values.yaml
          git commit -m "Update version to ${{ env.VERSION }} [skip ci]"
          git push origin master
